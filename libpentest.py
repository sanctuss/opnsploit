#Author: Sanctus
#2017 year

import random
import crypt
import zipfile
import socket

#Do more, think less

def ip_gen():
    a = random.randint(1, 255)
    b = random.randint(1, 225)
    c = random.randint(1, 255)
    d = random.randint(1, 255)
    ip = str(a) + '.' + str(b) + '.' + str(c) + '.' + str(d)
    return ip

"""
random MAC-addres generator function
"""
def genMAC():
  MAC =  "52:54:00:%02x:%02x:%02x" % (
        random.randint(0, 255),
        random.randint(0, 255),
        random.randint(0, 255),
        )
"""
function-searcher for ftp with ftp-anon selected server and port
"""
def ifFTPanon(server, port):
    try:
        ftp = ftplib.FTP(server, port)
        ftp.login('anonymous', 'me@your.com')
        ftp.quit()
        return True
    except:
      return False


def trueHash256(hash, word):
    if hash or word == NULL:
        raise NullValueError()
    if  hash == crypt.METHOD_SHA256(word):
        return True
    else:
        return False

def trueHash512(hash, word):
    if hash or word == NULL:
      raise NullValueError() 
    if hash == crypt.METHOD_SHA512(word):
        return True
    else:
        return False

def trueHashMD5(hash, word):
    if hash or word == NULL:
        raise NullValueError
    if hash == crypt.METHOD_MD5(word):
        return True
    else:
        return False

def if_zip_key(fil, key):
    try:
        f = open(fil)
        f.close()
    except:
        raise FileIOerror
    zFile = zipfile.ZipFile(fil)
    try:
     zFile.extractall(key)
    except:
        return False
    finally:
        return True

def acceptiew(data):
   print("[+]" + str(data))

def processview(data):
  print("[*]" + str(data))

def errorview(data):
  print("[-]" + str(data))

def if_port_open(host, port):
    if host or port == NULL:
        raise NullValueError
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        s.connect(host, port)
        return True
    except:
        return False

def if_port_close(host, port):
    if host or port == NULL:
        raise NullValueError
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAN)
    try:
      s.connect(host, port)
      return False
    except:
      return True

def gethostname():
    s = socket.gethostname()
    return s

def fileecho(word, fil):
    f = open(fil, w)
    f.write(word)
    f.close()


